{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/MyPosts/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","aside","item","src","photos","large","Preloader","Post","message","AddNewPostForm","maxLengthCreator","onSubmit","render","handleSubmit","name","component","Textarea","validate","required","placeholder","type","MyPosts","memo","PostDataNew","PostData","map","element","values","console","log","addPost","newPostText","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","history","push","getUsersProfile","setTimeout","getStatus","compose","withRouter","withAuthRedirect","mapStateToPropsForRedirect","isAuth","auth","RedirectComponent","to"],"mappings":"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","file":"static/js/3.c3e28144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Profile_aside__3pIwU\",\"item\":\"Profile_item__30Uof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"ProfileInfo_aside__HbjqF\",\"item\":\"ProfileInfo_item__2BTes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3RIeR\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.aside}>\r\n            <div className={s.item}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={s.item}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo7S86HLw3FSPP3Iflpfq1OkfEfkB8zdRGpw&usqp=CAU'/>\r\n            {props.message}\r\n            <div >\r\n                <span>Like {props.value} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/formControls\";\r\n\r\n\r\nlet maxLength20 = maxLengthCreator(20)\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSubmit}\r\n            render={({handleSubmit}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name=\"newPostText\"\r\n                               component={Textarea}\r\n                               validate={(maxLength20, required)}\r\n                               placeholder={\"Post message\"}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" name={\"btnAddPost\"}>Send</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let PostDataNew = props.PostData.map(\r\n        (element) => {\r\n            return (\r\n                <Post message={element.message} value={element.value}/>\r\n            )\r\n        }\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        console.log(values)\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>My posts</h3>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {PostDataNew}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        PostData: state.profilePage.PostData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n    debugger\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.aside}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"../Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfile, updateStatus} from \"../../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUsersProfile(userId);\r\n        setTimeout(() => {\r\n            this.props.getStatus(userId)\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n       return (\r\n           <Profile  { ...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n       );\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n//\r\n// let withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect (mapStateToProps, {getUsersProfile})(withUrlDataContainerComponent);\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUsersProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport  const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends  React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}"],"sourceRoot":""}